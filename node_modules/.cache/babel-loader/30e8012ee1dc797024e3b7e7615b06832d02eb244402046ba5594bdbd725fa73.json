{"ast":null,"code":"var _jsxFileName = \"/Users/ishithay/Documents/GitHub/SCRIBE/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport RightSidebar from './components/RightSidebar';\nimport { ThemeProvider, useTheme } from './components/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThemeSwitcher() {\n  _s();\n  const {\n    isDarkMode,\n    toggleTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"ThemeSwitcher\",\n    onClick: toggleTheme,\n    children: isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeSwitcher, \"MY/fJVj7pNG84xK2IRXuobEs7Rg=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeSwitcher;\nfunction App() {\n  _s2();\n  const [markdown, setMarkdown] = useState('');\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${useTheme().isDarkMode ? 'dark' : 'light'}`,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Editor\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: markdown,\n          onChange: e => setMarkdown(e.target.value),\n          placeholder: \"Type your markdown here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeSwitcher, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"B4WRXw/kOjZL/hHbudBqR8/okHw=\", false, function () {\n  return [useTheme];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ThemeSwitcher\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Sidebar","RightSidebar","ThemeProvider","useTheme","jsxDEV","_jsxDEV","ThemeSwitcher","_s","isDarkMode","toggleTheme","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","markdown","setMarkdown","value","onChange","e","target","placeholder","_c2","$RefreshReg$"],"sources":["/Users/ishithay/Documents/GitHub/SCRIBE/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport RightSidebar from './components/RightSidebar';\nimport { ThemeProvider, useTheme } from './components/ThemeContext';\n\nfunction ThemeSwitcher() {\n  const { isDarkMode, toggleTheme } = useTheme();\n\n  return (\n    <button className=\"ThemeSwitcher\" onClick={toggleTheme}>\n      {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n    </button>\n  );\n}\n\nfunction App() {\n  const [markdown, setMarkdown] = useState('');\n\n  return (\n    <ThemeProvider>\n      <div className={`App ${useTheme().isDarkMode ? 'dark' : 'light'}`}>\n        <Sidebar />\n        <div className=\"Editor\">\n          <textarea\n            value={markdown}\n            onChange={(e) => setMarkdown(e.target.value)}\n            placeholder=\"Type your markdown here...\"\n          />\n        </div>\n        <RightSidebar />\n        <ThemeSwitcher />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAE9C,oBACEE,OAAA;IAAQK,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEF,WAAY;IAAAG,QAAA,EACpDJ,UAAU,GAAG,sBAAsB,GAAG;EAAqB;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEb;AAACT,EAAA,CARQD,aAAa;EAAA,QACgBH,QAAQ;AAAA;AAAAc,EAAA,GADrCX,aAAa;AAUtB,SAASY,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEM,OAAA,CAACH,aAAa;IAAAU,QAAA,eACZP,OAAA;MAAKK,SAAS,EAAE,OAAOP,QAAQ,CAAC,CAAC,CAACK,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;MAAAI,QAAA,gBAChEP,OAAA,CAACL,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXX,OAAA;QAAKK,SAAS,EAAC,QAAQ;QAAAE,QAAA,eACrBP,OAAA;UACEiB,KAAK,EAAEF,QAAS;UAChBG,QAAQ,EAAGC,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,WAAW,EAAC;QAA4B;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNX,OAAA,CAACJ,YAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBX,OAAA,CAACC,aAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAACG,GAAA,CAnBQD,GAAG;EAAA,QAKiBf,QAAQ;AAAA;AAAAwB,GAAA,GAL5BT,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}