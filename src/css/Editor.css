:root {
  --selection-background-light: #e1d9ff; /* Pastel Lavender */
  --selection-text-light: #000000;
  --selection-background-dark: #a899e0; /* Slightly darker Lavender for dark mode contrast */
  --selection-text-dark: #ffffff;
}

/* Editor component styles */
.Editor {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Make sure the editor takes the full height of the viewport */
  background-color: #fff;
  width: 100%;
  transition: all 0.3s ease;
  color: #000; /* Default text color for light theme */
  overflow: hidden; /* Prevent overflow from causing issues */
}

/* Dark theme styles */
.Editor.dark {
  background-color: #000;
  color: #fff;
}

/* Tabs Container */
.Tabs {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #f4f4f4;
  padding: 10px;
  border-bottom: 1px solid #ddd;
  flex-shrink: 0;
  min-height: 48px; /* Ensure consistent height */
}

.Editor.dark .Tabs {
  background-color: #111;
  border-bottom: 1px solid #222;
}

.TabsLeft {
  overflow-y: hidden;
  display: flex;
  align-items: center;
  gap: 5px; /* Reduced gap for more compact tabs */
  overflow-x: auto; /* Allow tabs to scroll horizontally */
  max-width: 80%; /* Increased max width for tabs */
  scrollbar-width: thin;
  padding-bottom: 4px; /* Add space for scrollbar */
}

.TabsLeft::-webkit-scrollbar {
  height: 4px;
}

.TabsLeft::-webkit-scrollbar-thumb {
  background-color: #ccc;
  border-radius: 4px;
}

.Editor.dark .TabsLeft::-webkit-scrollbar-thumb {
  background-color: #555;
}

.TabsRight {
  margin-left: auto;
  display: flex;
  align-items: center;
  gap: 10px;
}

.Tab {
  background-color: #ffffff00;
  padding: 8px 32px 8px 12px; /* Increased right padding for larger close button */
  border-radius: 6px;
  cursor: pointer;
  font-size: 14px; /* Slightly smaller font */
  position: relative;
  display: flex;
  align-items: center;
  min-width: 40px; /* Reduced minimum width */
  max-width: 160px; /* Maximum width for tabs */
  transition: background-color 0.3s ease, color 0.3s ease;
  color: #000;
  white-space: nowrap;
  overflow: hidden; /* Hide overflow */
}

.Tab span {
  overflow: hidden;
  text-overflow: ellipsis; /* Add ellipsis for overflowing text */
  white-space: nowrap;
  flex: 1;
}

.Editor.dark .Tab {
  background-color: #22222200;
  color: #fff;
}

.Tab.active {
  background-color: #ffffff;
  color: #000;
}

.Editor.dark .Tab.active {
  background-color: #333;
  color: #fff;
}

/* Style for tabs with unsaved changes */
.Tab.unsaved {
  font-style: italic;
}

/* Unsaved indicator dot */
.UnsavedIndicator {
  color: #ff5252;
  margin-left: 5px;
  font-weight: bold;
  flex-shrink: 0;
}

.Footer .UnsavedIndicator {
  margin-left: 15px;
  font-style: italic;
  font-size: 14px;
}

.CloseTab {
  background-color: transparent;
  border: none;
  cursor: pointer;
  position: absolute;
  top: 50%;
  right: 6px; 
  transform: translateY(-50%);
  color: #555; 
  display: flex;
  align-items: center;
  justify-content: center;
  width: 22px;
  height: 22px;
  border-radius: 50%;
  opacity: 0; /* Hide by default */
  transition: opacity 0.2s ease, background-color 0.2s ease, color 0.2s ease;
}

/* Always show close button on active tab */
.Tab.active .CloseTab {
  opacity: 1;
}

/* Show close button on hover */
.Tab:hover .CloseTab {
  opacity: 1;
}

.CloseTab:hover {
  color: #fff;
  background-color: rgb(255, 72, 72);
}

.Editor.dark .CloseTab {
  color: #aaa; 
}

.Editor.dark .CloseTab:hover {
  color: #fff;
  background-color: rgb(255, 72, 72);
}

.AddTab {
  overflow: hidden;
  position: relative;
  top: .2rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
  font-size: 18px;
  color: #555;
  transition: color 0.3s ease, background-color 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  border-radius: 4px;
  margin-left: 2px;
  flex-shrink: 0;
}

.AddTab:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.Editor.dark .AddTab {
  color: #aaa;
}

.Editor.dark .AddTab:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Save button */
.SaveButton {
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: #555;
  font-size: 16px;
  padding: 5px;
  border-radius: 4px;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.SaveButton:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.SaveButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.Editor.dark .SaveButton {
  color: #fff;
}

.Editor.dark .SaveButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Improved TextEditorCanvas to support proper padding and scrollbar position */
.TextEditorCanvas {
  flex-grow: 1;
  display: flex;
  background-color: #f9f9f9; /* Lighter background to match Notion */
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.Editor.dark .TextEditorCanvas {
  background-color: #121212; /* Darker background for dark mode */
}

/* Better container structure to handle scrolling correctly */
.EditorContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  flex: 1 1 auto;
  position: relative;
  overflow: hidden;
  padding: 0;
}

/* Empty state for when no file is selected */
.EmptyState {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  color: #999;
  font-size: 18px;
  text-align: center;
  padding: 20px;
}

.Editor.dark .EmptyState {
  color: #666;
}

.NewFileButton {
  margin-top: 20px;
  background-color: #0066cc;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 10px 20px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s ease;
}

.NewFileButton:hover {
  background-color: #0055aa;
}

.Editor.dark .NewFileButton {
  background-color: #4d94ff;
  color: #000;
}

.Editor.dark .NewFileButton:hover {
  background-color: #66a3ff;
}

/* Text area and markdown view to ensure same sizing */
.TextArea,
.MarkdownView {
  width: 100%; /* Take full width */
  height: 100%; /* Take full height */
  padding: 20px;
  font-size: 16px;
  border: 1px solid #ddd;
  box-sizing: border-box; /* Include padding and border in width/height */
  resize: none;
  outline: none;
  font-family: 'JetBrains Mono', monospace;
  overflow-y: auto;
  background-color: #fff;
}

.TextArea {
  background-color: #fff;
  color: #000;
}

.Editor.dark .TextArea {
  background-color: #000;
  color: #fff;
  border-color: #333;
}

.TextArea:focus {
  border-color: #d3d3ff;
}

.Editor.dark .TextArea:focus {
  border-color: #555;
}

/* Markdown View */
.MarkdownView {
  background-color: #fff;
  color: #000;
  font-size: 16px;
  word-wrap: break-word;
  font-family: 'Georgia', serif;
}

.Editor.dark .MarkdownView {
  background-color: #000;
  color: #fff;
  font-family: 'Georgia', serif;
}

.Footer {
  padding: 8px 15px;
  background-color: #fafafa;
  text-align: right;
  border-top: 1px solid rgba(0, 0, 0, 0.07);
  font-size: 13px;
  color: #777;
  flex-shrink: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 32px;
  font-family: 'JetBrains Mono', monospace;
}

.Editor.dark .Footer {
  background-color: #0a0a0a;
  color: #888;
  border-top: 1px solid rgba(255, 255, 255, 0.05);
}

.Footer .FooterLeft {
  display: flex;
  align-items: center;
  gap: 15px;
}

.Footer .FooterRight {
  display: flex;
  align-items: center;
  gap: 15px;
}

.Footer .Separator {
  color: #ddd;
  margin: 0 5px;
}

.Editor.dark .Footer .Separator {
  color: #444;
}

.Footer .FooterItem {
  display: flex;
  align-items: center;
  gap: 5px;
  white-space: nowrap;
}

.Footer .FooterItem svg {
  width: 14px;
  height: 14px;
}

/* Hide some footer items on small screens */
@media (max-width: 768px) {
  .Footer .FooterItem.optional {
    display: none;
  }
}

/* Additional markdown styles */
.markdown-content h1,
.markdown-content h2,
.markdown-content h3,
.markdown-content h4,
.markdown-content h5,
.markdown-content h6 {
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  font-weight: 600;
}

.markdown-content p {
  margin-bottom: 1em;
  line-height: 1.6;
}

.markdown-content a {
  color: #0066cc;
  text-decoration: none;
}

.markdown-content a:hover {
  text-decoration: underline;
}

.Editor.dark .markdown-content a {
  color: #5599ff;
}

.markdown-content ul,
.markdown-content ol {
  margin-bottom: 1em;
  padding-left: 2em;
}

.markdown-content li {
  margin-bottom: 0.5em;
}

.markdown-content blockquote {
  border-left: 4px solid #ddd;
  padding-left: 1em;
  margin-left: 0;
  color: #777;
}

.Editor.dark .markdown-content blockquote {
  border-left-color: #555;
  color: #999;
}

.markdown-content code {
  background-color: #f4f4f4;
  padding: 0.2em 0.4em;
  border-radius: 3px;
  font-family: 'JetBrains Mono', monospace;
  font-size: 0.9em;
}

.Editor.dark .markdown-content code {
  background-color: #333;
}

.markdown-content pre {
  background-color: #f4f4f4;
  padding: 1em;
  border-radius: 5px;
  overflow-x: auto;
  margin-bottom: 1em;
}

.Editor.dark .markdown-content pre {
  background-color: #333;
}

.markdown-content pre code {
  background-color: transparent;
  padding: 0;
  border-radius: 0;
  display: block;
}

/* Sidebar styles (Left and Right Sidebar) */
.Sidebar {
  width: 250px; /* Adjust according to your sidebar width */
  position: fixed;
  top: 0;
  bottom: 0;
  transition: background-color 0.3s ease;
  z-index: 10;
}

.Editor.dark .Sidebar {
  background-color: #000;
  color: #fff;
}

.SidebarLeft {
  left: 0;
}

.SidebarRight {
  right: 0;
}

/* Styles for sidebar items, links, and buttons */
.SidebarItem {
  padding: 10px;
  color: #000;
  transition: background-color 0.3s ease;
}

.Editor.dark .SidebarItem {
  color: #fff;
}

.Editor.dark .SidebarItem:hover {
  background-color: #222;
}

/* Moon/Sun Toggle Button Style */
.ThemeToggle {
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: #555;
  font-size: 18px;
}

.Editor.dark .ThemeToggle {
  color: #fff;
}

.MarkdownButton {
  background-color: transparent;
  border: none;
  color: #555;
  font-size: 16px;
  cursor: pointer;
}

.Editor.dark .MarkdownButton {
  color: #fff;
}

/* General Markdown Styling */
.markdown-content {
  font-family: 'Courier New', monospace;
  line-height: 1.5;
  color: inherit;
}

/* Specific adjustments to Markdown elements in dark mode */
.Editor.dark .markdown-content pre,
.Editor.dark .markdown-content code {
  background-color: #222;
}

/* Better tab responsiveness and management */
.TabsLeft:focus-within {
  scrollbar-width: auto;
}

.TabsLeft:hover::-webkit-scrollbar-thumb {
  background-color: #aaa;
}

.Editor.dark .TabsLeft:hover::-webkit-scrollbar-thumb {
  background-color: #777;
}

/* Tab container shadows to indicate horizontal scroll */
.TabsLeft::before,
.TabsLeft::after {
  content: '';
  position: absolute;
  top: 0;
  height: 100%;
  width: 15px;
  pointer-events: none;
  z-index: 1;
  opacity: 0;
  transition: opacity 0.3s;
}

.TabsLeft::before {
  left: 0;
  background: linear-gradient(to right, rgba(244, 244, 244, 0.9), rgba(244, 244, 244, 0));
}

.TabsLeft::after {
  right: 0;
  background: linear-gradient(to left, rgba(244, 244, 244, 0.9), rgba(244, 244, 244, 0));
}

.Editor.dark .TabsLeft::before {
  background: linear-gradient(to right, rgba(17, 17, 17, 0.9), rgba(17, 17, 17, 0));
}

.Editor.dark .TabsLeft::after {
  background: linear-gradient(to left, rgba(17, 17, 17, 0.9), rgba(17, 17, 17, 0));
}

.TabsLeft.can-scroll-left::before,
.TabsLeft.can-scroll-right::after {
  opacity: 1;
}

/* Add some more space between tabs for better clarity */
.Tab + .Tab {
  margin-left: 2px;
}

/* Add custom selection styles */
.TextArea::selection {
  background-color: var(--selection-background-light);
  color: var(--selection-text-light);
}

.dark .TextArea::selection {
  background-color: var(--selection-background-dark);
  color: var(--selection-text-dark);
}

/* Canvas Tab Styling */
.Tab.canvas-tab {
  background-color: rgba(121, 82, 179, 0.1);
}

.Editor.dark .Tab.canvas-tab {
  background-color: rgba(156, 109, 222, 0.1);
}

.Tab.canvas-tab.active {
  background-color: rgba(121, 82, 179, 0.2);
  border-bottom-color: #7952b3;
}

.Editor.dark .Tab.canvas-tab.active {
  background-color: rgba(156, 109, 222, 0.2);
  border-bottom-color: #9c6dde;
}

/* New Canvas Button */
.NewCanvasButton {
  margin-top: 20px;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 10px 20px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s ease;
}

.Editor.dark .NewCanvasButton {
  color: #9c6dde;
  border-color: rgba(156, 109, 222, 0.3);
}

.NewCanvasButton:hover {
  background-color: rgba(121, 82, 179, 0.1);
  border-color: rgba(121, 82, 179, 0.5);
}

.Editor.dark .NewCanvasButton:hover {
  background-color: rgba(156, 109, 222, 0.1);
  border-color: rgba(156, 109, 222, 0.5);
}

.EmptyStateButtons {
  display: flex;
  gap: 12px;
  margin-top: 12px;
}

.NewCanvasButton svg {
  color: #7952b3;
}

.Editor.dark .NewCanvasButton svg {
  color: #9c6dde;
}

/* Make FileButton and NewCanvasButton consistent */
.NewFileButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px 16px;
  border-radius: 4px;
  background-color: #7952b3;
  color: white;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease;
  border: none;
}

.EmptyStateButtons .NewFileButton,
.EmptyStateButtons .NewCanvasButton {
  flex: 1;
  justify-content: center;
  padding: 10px 16px;
}

.EmptyStateButtons .NewCanvasButton {
  background-color: transparent;
  border: 1px solid #7952b3;
  color: #7952b3;
}

.Editor.dark .EmptyStateButtons .NewCanvasButton {
  border-color: #9c6dde;
  color: #9c6dde;
}

.EmptyStateButtons .NewCanvasButton:hover {
  background-color: rgba(121, 82, 179, 0.1);
}

.Editor.dark .EmptyStateButtons .NewCanvasButton:hover {
  background-color: rgba(156, 109, 222, 0.1);
}

.markdown-content img,
.markdown-image {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin: 1rem 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: block;
}

.dark .markdown-content img,
.dark .markdown-image {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Add a subtle zoom effect on hover */
.markdown-content img:hover,
.markdown-image:hover {
  transform: scale(1.01);
  transition: transform 0.2s ease-in-out;
}

/* Image container for better alignment */
.image-container {
  display: flex;
  justify-content: center;
  margin: 1rem 0;
}

.image-container img {
  max-height: 500px;
  object-fit: contain;
}

/* Error message for unsupported file types */
.error-message {
  color: #dc3545;
  padding: 0.5rem;
  margin: 0.5rem 0;
  border-radius: 4px;
  background-color: rgba(220, 53, 69, 0.1);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.dark .error-message {
  background-color: rgba(220, 53, 69, 0.2);
}

/* Configure the Tiptap editor for proper width and padding */
.TiptapEditor {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  overflow-y: auto; /* Scrollbar will be here */
  position: relative;
  background-color: transparent;
  padding: 0;
  scrollbar-width: thin;
  scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
}

.TiptapEditor::-webkit-scrollbar {
  width: 8px; /* Slightly wider for better grab */
}

.TiptapEditor::-webkit-scrollbar-track {
  background: transparent;
}

.TiptapEditor::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}

.Editor.dark .TiptapEditor {
  scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
}

.Editor.dark .TiptapEditor::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.2);
}

/* Style the text editing area with comfortable padding */
.TiptapEditor .ProseMirror {
  width: 100%;
  /* height: 100%; Removed to let content flow */
  min-height: 100%; /* Ensure it can fill if content is short */
  padding: 2rem 1.5rem; /* Reduced horizontal padding from 3rem to 1.5rem */
  font-size: 16px;
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  /* overflow-y: auto; Removed, parent .TiptapEditor handles scroll */
  /* background-color: #fff; */
  color: #333;
  line-height: 1.6;
  max-width: 900px;
  margin: 0 auto;
  position: relative;
}

.Editor.dark .TiptapEditor .ProseMirror {
  background-color: #121212;
  color: #eee;
}

/* Remove padding from direct children, as .ProseMirror now has it */
.TiptapEditor .ProseMirror > * {
  padding-left: 0;
  padding-right: 0;
  max-width: 100%;
  box-sizing: border-box;
}

/* Typography & Block Elements - padding is now handled by .ProseMirror */
.TiptapEditor .ProseMirror h1,
.TiptapEditor .ProseMirror h2,
.TiptapEditor .ProseMirror h3 {
  font-weight: 700;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.3;
  padding-left: 0; /* Reset */
  padding-right: 0; /* Reset */
}
.TiptapEditor .ProseMirror h1 { font-size: 2.2em; color: #000; }
.TiptapEditor .ProseMirror h2 { font-size: 1.8em; color: #000; }
.TiptapEditor .ProseMirror h3 { font-size: 1.4em; color: #000; }

.Editor.dark .TiptapEditor .ProseMirror h1,
.Editor.dark .TiptapEditor .ProseMirror h2,
.Editor.dark .TiptapEditor .ProseMirror h3 {
  color: #fff;
}

.TiptapEditor .ProseMirror p {
  margin: 0.7em 0;
  line-height: 1.6;
  padding-left: 0; /* Reset */
  padding-right: 0; /* Reset */
}

/* Lists Styling - rely on browser default indent within the padded .ProseMirror */
.TiptapEditor .ProseMirror ul,
.TiptapEditor .ProseMirror ol {
  margin: 0.7em 0;
  padding-left: 1.5em; /* Standard list indent */
  padding-right: 0;
}

.TiptapEditor .ProseMirror li p {
  margin: 0; /* Paragraphs in list items shouldn't have extra vertical margin */
}

/* Task List Styling - Notion style */
.tiptap-task-list {
  list-style-type: none;
  padding-left: 0 !important; /* Reset, checkbox provides indent */
  padding-right: 0 !important;
}

/* Blockquote Styling - internal padding is fine, margins are not needed for side spacing */
.TiptapEditor .ProseMirror blockquote {
  margin-left: 0; /* Reset */
  margin-right: 0; /* Reset */
  padding-left: 1em; /* Internal padding from border */
  border-left: 3px solid #ddd;
  font-style: italic;
  color: #666;
  margin-top: 1em;
  margin-bottom: 1em;
}

/* Table Styling - should take 100% width of the padded .ProseMirror */
.tiptap-table {
  margin-left: 0 !important; /* Reset */
  margin-right: 0 !important; /* Reset */
  width: 100% !important; /* Full width of parent content area */
  border-collapse: collapse;
  table-layout: fixed;
  margin-top: 1em;
  margin-bottom: 1em;
  overflow: hidden;
}

/* Code Block Styling - should take 100% width of the padded .ProseMirror */
.tiptap-code-block {
  margin-left: 0 !important; /* Reset */
  margin-right: 0 !important; /* Reset */
  background-color: #f5f5f5;
  border-radius: 6px;
  font-family: 'JetBrains Mono', 'Fira Code', monospace;
  padding: 1em;
  margin-top: 1em;
  margin-bottom: 1em;
  overflow-x: auto;
  position: relative;
}

/* Image styling in the editor - max width 100% of padded .ProseMirror */
.TiptapEditor .ProseMirror img {
  max-width: 100%;
  height: auto;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-left: auto; /* Default to right for block */
  margin-right: auto; /* Default to center for block */
  display: block; /* Important for margin auto centering */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* Image Alignment Styles */
.TiptapEditor .ProseMirror img[data-align="left"] {
  margin-left: 0;
  margin-right: auto;
}

.TiptapEditor .ProseMirror img[data-align="center"] {
  margin-left: auto;
  margin-right: auto;
}

.TiptapEditor .ProseMirror img[data-align="right"] {
  margin-left: auto;
  margin-right: 0;
}

.TiptapEditor .ProseMirror img:hover {
  transform: scale(1.01);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

.Editor.dark .TiptapEditor .ProseMirror img {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.Editor.dark .TiptapEditor .ProseMirror img:hover {
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
}

/* Iframe (YouTube) styling - max width 100% of padded .ProseMirror */
.TiptapEditor .ProseMirror iframe {
  max-width: 100%;
  border-radius: 6px;
  border: none;
  margin: 1em 0; /* Vertical margin only */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* Remove the generic padding override for specific elements */
.TiptapEditor .ProseMirror > *.tiptap-task-list,
.TiptapEditor .ProseMirror > *.tiptap-code-block,
.TiptapEditor .ProseMirror > *.tiptap-table {
  padding-left: 0; /* Already handled or not needed if .ProseMirror has padding */
  padding-right: 0; /* Already handled or not needed if .ProseMirror has padding */
}

/* Scrollbar styling (Main scrollbar is now on .TiptapEditor) */
/* Remove scrollbar styles from .ProseMirror as it no longer scrolls */
/* .TiptapEditor .ProseMirror { scrollbar-width: thin; ... } */
/* .TiptapEditor .ProseMirror::-webkit-scrollbar { ... } */
/* .Editor.dark .TiptapEditor .ProseMirror::-webkit-scrollbar-thumb { ... } */

/* Tiptap Editor Bubble Menu */
.EditorBubbleMenu {
  display: flex;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  padding: 6px;
  margin-bottom: 8px;
  z-index: 20;
  border: 1px solid rgba(0, 0, 0, 0.05);
  transition: all 0.2s ease;
  backdrop-filter: blur(10px);
  /* Add max-width to allow wrapping */
  max-width: 90vw; /* Example: max 90% of viewport width */
  /* Or a fixed max-width: e.g., max-width: 500px; */
}

.Editor.dark .EditorBubbleMenu {
  background-color: rgba(30, 30, 30, 0.95);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.EditorBubbleMenu .MenuButtons {
  display: flex;
  gap: 2px; /* Tighter button gap */
  align-items: center;
  flex-wrap: wrap; /* Allow buttons to wrap to the next line */
  /* Remove any fixed width if present */
  width: auto; /* Ensure it sizes based on content */
}

.EditorBubbleMenu button {
  background-color: transparent;
  border: none;
  color: #333;
  border-radius: 4px;
  padding: 5px; /* Slightly smaller padding */
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  min-width: 28px; /* Ensure buttons have minimum width */
  min-height: 28px;
}

.Editor.dark .EditorBubbleMenu button {
  color: #eee;
}

.EditorBubbleMenu button:hover {
  background-color: rgba(0, 0, 0, 0.05);
  transform: translateY(-1px);
}

.Editor.dark .EditorBubbleMenu button:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.EditorBubbleMenu button.is-active {
  background-color: rgba(0, 0, 0, 0.07);
  color: #000;
}

.Editor.dark .EditorBubbleMenu button.is-active {
  background-color: rgba(255, 255, 255, 0.15);
  color: #fff;
}

.MenuDivider {
  width: 1px;
  height: 20px;
  background-color: rgba(0, 0, 0, 0.1);
  margin: 0 4px;
}

.Editor.dark .MenuDivider {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Tiptap Editor Floating Menu */
.EditorFloatingMenu {
  display: flex;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  padding: 6px;
  margin-bottom: 8px;
  z-index: 20;
  border: 1px solid rgba(0, 0, 0, 0.05);
  backdrop-filter: blur(10px);
}

.Editor.dark .EditorFloatingMenu {
  background-color: rgba(30, 30, 30, 0.95);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.EditorFloatingMenu .MenuButtons {
  display: flex;
  gap: 4px;
  align-items: center;
  flex-wrap: wrap;
  max-width: 280px;
}

.EditorFloatingMenu button {
  background-color: transparent;
  border: none;
  color: #333;
  border-radius: 4px;
  padding: 6px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.Editor.dark .EditorFloatingMenu button {
  color: #eee;
}

.EditorFloatingMenu button:hover {
  background-color: rgba(0, 0, 0, 0.05);
  transform: translateY(-1px);
}

.Editor.dark .EditorFloatingMenu button:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.EditorFloatingMenu button.is-active {
  background-color: rgba(0, 0, 0, 0.07);
  color: #000;
}

.Editor.dark .EditorFloatingMenu button.is-active {
  background-color: rgba(255, 255, 255, 0.15);
  color: #fff;
}

/* Task List Styling - Modern Notion-style */
.tiptap-task-list {
  list-style-type: none;
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.tiptap-task-item {
  display: flex;
  align-items: flex-start;
  margin-bottom: 0.5em;
  position: relative;
}

.tiptap-task-item > label {
  margin-right: 0.75em;
  user-select: none;
}

.tiptap-task-item > div {
  flex: 1;
}

.tiptap-task-item > label input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid #e0e0e0;
  border-radius: 4px;
  margin: 0;
  position: relative;
  top: 2px;
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: white;
}

.Editor.dark .tiptap-task-item > label input[type="checkbox"] {
  border-color: #555;
  background-color: #333;
}

.tiptap-task-item > label input[type="checkbox"]:hover {
  border-color: #2563eb;
  transform: scale(1.05);
}

.tiptap-task-item > label input[type="checkbox"]:checked {
  background-color: #2563eb;
  border-color: #2563eb;
}

.tiptap-task-item > label input[type="checkbox"]:checked::after {
  content: "";
  position: absolute;
  left: 5px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.tiptap-task-item[data-checked="true"] > div p {
  color: #aaa;
  text-decoration: line-through;
  transition: all 0.2s ease;
}

.Editor.dark .tiptap-task-item[data-checked="true"] > div p {
  color: #666;
}

/* Style the focus state */
.TiptapEditor .ProseMirror:focus {
  outline: none;
}

/* Placeholder styling */
.TiptapEditor .ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #adb5bd;
  pointer-events: none;
  height: 0;
  font-style: italic;
}

.Editor.dark .TiptapEditor .ProseMirror p.is-editor-empty:first-child::before {
  color: #666;
}

/* Inline code styling - modern look */
.TiptapEditor .ProseMirror code {
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: 4px;
  padding: 0.2em 0.4em;
  font-family: 'JetBrains Mono', 'Fira Code', monospace;
  font-size: 0.9em;
  color: #e0234e;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.Editor.dark .TiptapEditor .ProseMirror code {
  background-color: rgba(255, 255, 255, 0.1);
  color: #ff7b72;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

/* Link styling - modern look */
.tiptap-link {
  color: #2563eb;
  text-decoration: none;
  border-bottom: 1px solid rgba(37, 99, 235, 0.3);
  transition: all 0.2s ease;
  padding: 0 1px;
}

.tiptap-link:hover {
  border-bottom-color: rgba(37, 99, 235, 1);
  background-color: rgba(37, 99, 235, 0.05);
  border-radius: 2px;
}

.Editor.dark .tiptap-link {
  color: #3b82f6;
  border-bottom-color: rgba(59, 130, 246, 0.3);
}

.Editor.dark .tiptap-link:hover {
  border-bottom-color: rgba(59, 130, 246, 1);
  background-color: rgba(59, 130, 246, 0.1);
}

/* Text highlight styling */
.TiptapEditor .ProseMirror mark {
  background-color: rgba(255, 235, 59, 0.4);
  color: inherit;
  border-radius: 2px;
  padding: 0 2px;
}

.Editor.dark .TiptapEditor .ProseMirror mark {
  background-color: rgba(255, 235, 59, 0.3);
}

/* Text alignment */
.TiptapEditor .ProseMirror .text-left {
  text-align: left;
}

.TiptapEditor .ProseMirror .text-center {
  text-align: center;
}

.TiptapEditor .ProseMirror .text-right {
  text-align: right;
}

/* Image Resizing Styles */
/* Style when the image node itself is selected */
.ProseMirror .ProseMirror-selectednode {
  /* Ensure selected node itself doesn't have interfering styles */
  outline: none;
}

.ProseMirror .ProseMirror-selectednode img {
  outline: 3px solid #3b82f6; /* Use a theme-consistent blue */
  box-shadow: 0 0 0 3px #3b82f6; /* Match outline color */
}

.Editor.dark .ProseMirror .ProseMirror-selectednode img {
  outline-color: #60a5fa; /* Lighter blue for dark mode */
  box-shadow: 0 0 0 3px #60a5fa;
}

/* Default browser resize handles are difficult to style directly.
   The outline provides the main visual cue. */

/* Image Bubble Menu Specific Styles (Optional) */
.ImageBubbleMenu {
  padding: 4px;
}

.ImageBubbleMenu .MenuButtons {
  gap: 4px;
}

.ImageBubbleMenu button {
  padding: 6px;
}

/* Code Block Styling - enhanced */
.tiptap-code-block {
  background-color: #f8f9fa;
  border-radius: 8px;
  font-family: 'JetBrains Mono', 'Fira Code', monospace;
  padding: 1.25em;
  margin-top: 1em;
  margin-bottom: 1em;
  overflow-x: auto;
  position: relative;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  border: 1px solid rgba(0, 0, 0, 0.05);
}

.Editor.dark .tiptap-code-block {
  background-color: #1e1e1e;
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.tiptap-code-block pre {
  margin: 0;
  padding: 0;
  background: transparent;
  font-size: 0.9em;
  tab-size: 2;
  color: #333;
  line-height: 1.6;
}

.Editor.dark .tiptap-code-block pre {
  color: #eee;
}

/* Syntax highlighting - enhanced */
.tiptap-code-block .hljs-comment,
.tiptap-code-block .hljs-quote {
  color: #636e7b;
  font-style: italic;
}

.tiptap-code-block .hljs-keyword,
.tiptap-code-block .hljs-selector-tag,
.tiptap-code-block .hljs-subst {
  color: #d73a49;
}

.tiptap-code-block .hljs-string,
.tiptap-code-block .hljs-doctag,
.tiptap-code-block .hljs-template-variable {
  color: #22863a;
}

.Editor.dark .tiptap-code-block .hljs-string,
.Editor.dark .tiptap-code-block .hljs-doctag,
.Editor.dark .tiptap-code-block .hljs-template-variable {
  color: #85c366;
}

.tiptap-code-block .hljs-title,
.tiptap-code-block .hljs-function,
.tiptap-code-block .hljs-params {
  color: #6f42c1;
}

.Editor.dark .tiptap-code-block .hljs-title,
.Editor.dark .tiptap-code-block .hljs-function,
.Editor.dark .tiptap-code-block .hljs-params {
  color: #b392f0;
}

/* Table Styling - enhanced */
.tiptap-table {
  margin-left: 0 !important;
  margin-right: 0 !important;
  width: 100% !important;
  border-collapse: separate;
  border-spacing: 0;
  table-layout: fixed;
  margin-top: 1.5em;
  margin-bottom: 1.5em;
  overflow: hidden;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  border: 1px solid #e0e0e0;
}

.tiptap-table td,
.tiptap-table th {
  border: none;
  border-bottom: 1px solid #e0e0e0;
  padding: 0.8em 1em;
  position: relative;
  min-width: 80px;
  vertical-align: top;
  transition: background-color 0.2s ease;
  text-align: left;
}

.tiptap-table th {
  border-right: 1px solid #e0e0e0;
}
.tiptap-table td:not(:last-child),
.tiptap-table th:not(:last-child) {
  border-right: 1px solid #e0e0e0;
}

.tiptap-table tr:last-child td {
  border-bottom: none;
}

.Editor.dark .tiptap-table td,
.Editor.dark .tiptap-table th {
  border-bottom-color: #3a3a3a;
}

.Editor.dark .tiptap-table th {
  border-right-color: #3a3a3a;
}
.Editor.dark .tiptap-table td:not(:last-child),
.Editor.dark .tiptap-table th:not(:last-child) {
  border-right-color: #3a3a3a;
}

.tiptap-table th {
  background-color: #f9fafb;
  font-weight: 600;
  color: #374151;
}

.Editor.dark .tiptap-table th {
  background-color: #2a2a2e;
  color: #e0e0e0;
}

.tiptap-table td:hover,
.tiptap-table th:hover {
  background-color: rgba(0, 0, 0, 0.02);
}

.Editor.dark .tiptap-table td:hover,
.Editor.dark .tiptap-table th:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

/* Selected cell styling */
.tiptap-table .selectedCell {
  background-color: rgba(37, 99, 235, 0.1) !important;
  outline: 2px solid #2563eb;
  outline-offset: -1px;
}

.Editor.dark .tiptap-table .selectedCell {
  background-color: rgba(59, 130, 246, 0.2) !important;
  outline-color: #3b82f6;
}

.tiptap-table .tableWrapper {
  overflow-x: auto;
  border-radius: 8px;
}

/* Column resize handles */
.tiptap-table .column-resize-handle {
  position: absolute;
  right: -3px;
  top: 0;
  bottom: 0;
  width: 6px;
  background-color: #2563eb;
  cursor: col-resize;
  z-index: 20;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.tiptap-table th:hover .column-resize-handle,
.tiptap-table td:hover .column-resize-handle,
.tiptap-table .column-resize-handle.dragging {
  opacity: 1;
}

/* Table grip styling - top-left table selection handle */
.grip-table {
    width: 18px;
    height: 18px;
    background-color: #f1f3f5;
    border: 1px solid #ced4da;
  border-radius: 4px;
    cursor: grab;
    position: absolute;
    top: -24px;
    left: -24px;
    z-index: 30;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.6;
    transition: opacity 0.2s ease;
}

.grip-table:hover {
    opacity: 1;
}

.grip-table::before {
    content: "⠿";
    font-size: 12px;
    color: #495057;
}

.Editor.dark .grip-table {
    background-color: #3a3a3e;
    border-color: #555;
}

.Editor.dark .grip-table::before {
    color: #ccc;
}

/* Table Bubble Menu - specific styling */
.TableBubbleMenu {
  padding: 8px;
  box-shadow: 0 6px 24px rgba(0, 0, 0, 0.15);
}

.TableBubbleMenu .MenuButtons {
  flex-wrap: wrap;
  gap: 6px;
  max-width: none;
}

.TableBubbleMenu button {
  padding: 8px;
  font-size: 0.85em;
  display: flex;
  align-items: center;
  gap: 6px;
}

.Editor.dark .TableBubbleMenu button {
  color: #ccc;
}

.Editor.dark .TableBubbleMenu button:hover {
  color: #fff;
}

/* Enhance Bubble Menu Button Styles */
.EditorBubbleMenu button {
  padding: 5px; /* Slightly smaller padding */
  min-width: 28px; /* Ensure buttons have minimum width */
  min-height: 28px;
}

.EditorBubbleMenu .MenuButtons {
  gap: 2px; /* Tighter button gap */
}

/* Styling for Dropdowns in Bubble Menu */
.MenuDropdown {
  position: relative;
  display: inline-block;
}

.DropdownToggle {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 5px 8px;
  border-radius: 4px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  transition: background-color 0.2s;
  color: inherit;
}

.DropdownToggle:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.Editor.dark .DropdownToggle:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.DropdownToggle span {
  font-size: 0.9em;
  max-width: 80px; /* Prevent long font names from breaking layout */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.DropdownContent {
  /* display: none; Will be controlled by :hover */
  visibility: hidden; /* Use visibility for better transition/state handling */
  opacity: 0;
  position: absolute;
  background-color: #ffffff; /* Solid white background */
  min-width: 160px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  z-index: 100; /* Ensure dropdown is on top */
  border-radius: 6px;
  padding: 8px 0;
  margin-top: 6px; /* Slightly more space */
  border: 1px solid #eee;
  max-height: 200px;
  overflow-y: auto;
  transition: opacity 0.2s ease, visibility 0s linear 0.2s; /* Delay visibility change */
}

.Editor.dark .DropdownContent {
  background-color: #2a2a2e; /* Solid dark background */
  border-color: #444;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
}

.MenuDropdown:hover .DropdownContent {
  /* display: block; */
  visibility: visible;
  opacity: 1;
  transition: opacity 0.2s ease, visibility 0s linear 0s; /* Show immediately */
}

.DropdownContent button {
  color: #333;
  padding: 8px 16px;
  text-decoration: none;
  display: block;
  width: 100%;
  text-align: left;
  background: none;
  border: none;
  cursor: pointer;
  font-size: 0.9em;
}

.Editor.dark .DropdownContent button {
  color: #eee;
}

.DropdownContent button:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.Editor.dark .DropdownContent button:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Color Palette Specific Styles */
.ColorPalette {
  min-width: auto;
  padding: 8px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 4px;
}

.ColorPalette button {
  padding: 0;
  width: 24px;
  height: 24px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid transparent;
}

.ColorPalette button:hover {
  transform: scale(1.1);
  border-color: #aaa;
}

.ColorSwatch {
  width: 18px;
  height: 18px;
  border-radius: 3px;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.Editor.dark .ColorSwatch {
   border: 1px solid rgba(255, 255, 255, 0.2);
}

/* --- Text Selection Color --- */

/* Apply selection style to the editor content area */
.TiptapEditor .ProseMirror::selection {
  background-color: var(--selection-background-light);
  color: var(--selection-text-light);
}

.Editor.dark .TiptapEditor .ProseMirror::selection {
  background-color: var(--selection-background-dark);
  color: var(--selection-text-dark);
}

/* Also apply to regular text areas if you have any */
textarea::selection {
  background-color: var(--selection-background-light);
  color: var(--selection-text-light);
}

.Editor.dark textarea::selection {
  background-color: var(--selection-background-dark);
  color: var(--selection-text-dark);
}

/* --- End Text Selection Color --- */

/* KaTeX Math Styling */
.katex-display {
  overflow-x: auto;
  overflow-y: hidden;
  padding: 1em 0;
}

/* Ensure inline math doesn't mess up line height too much */
.ProseMirror .katex {
  display: inline-block;
  vertical-align: middle; /* Or adjust as needed */
  line-height: 1; 
}

.ProseMirror .math-node.ProseMirror-selectednode {
  outline: 2px solid #2563eb;
  border-radius: 4px;
}

/* Styling for Sub/Superscript */
.ProseMirror sub {
  vertical-align: sub;
  font-size: smaller;
}

.ProseMirror sup {
  vertical-align: super;
  font-size: smaller;
}

/* Image Analysis Panel */
.ImageAnalysisPanel {
  position: absolute;
  background-color: #fff; /* Light theme default */
  color: #333;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
  padding: 12px;
  width: 280px;
  max-height: 350px;
  overflow-y: auto;
  z-index: 150; /* Ensure it's above most editor elements */
  font-size: 14px;
  line-height: 1.5;
  scrollbar-width: thin;
  scrollbar-color: rgba(0,0,0,0.2) transparent;
}

.ImageAnalysisPanel.dark {
  background-color: #212529; /* Darker background for dark theme */
  color: #e9ecef; /* Light text for dark theme */
  border-color: #495057; /* Darker border */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  scrollbar-color: rgba(255,255,255,0.2) transparent;
}

.ImageAnalysisPanel .CloseButton {
  position: absolute;
  top: 8px;
  right: 8px;
  background: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  padding: 4px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.ImageAnalysisPanel .CloseButton:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.ImageAnalysisPanel.dark .CloseButton:hover {
  background-color: rgba(255, 255, 255, 0.15);
}

.ImageAnalysisPanel .PanelContent {
  margin-top: 20px; /* Space for the close button */
  white-space: pre-wrap; /* Preserve line breaks from AI response */
}

.ImageAnalysisPanel::-webkit-scrollbar {
  width: 6px;
}

.ImageAnalysisPanel::-webkit-scrollbar-thumb {
  background-color: rgba(0,0,0,0.2);
  border-radius: 3px;
}

.ImageAnalysisPanel.dark::-webkit-scrollbar-thumb {
  background-color: rgba(255,255,255,0.2);
}

/* Image Processing Shimmer Effect */

/* Ensure the image OR its direct selected wrapper can host the shimmer */
.ProseMirror img.image-processing-shimmer,
.ProseMirror .ProseMirror-selectednode.image-processing-shimmer {
  position: relative !important; /* Force relative positioning for the pseudo-element */
  overflow: hidden !important;   /* Keep shimmer within image bounds */
  /* It's important that this element itself is visible and has dimensions */
}

/* Styling for the shimmer pseudo-element itself */
.ProseMirror img.image-processing-shimmer::after,
.ProseMirror .ProseMirror-selectednode.image-processing-shimmer::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    110deg,
    rgba(255, 255, 255, 0) 10%,
    rgba(255, 255, 255, 0.2) 20%, 
    rgba(255, 255, 255, 0.4) 30%,
    rgba(255, 255, 255, 0.6) 40%,
    rgba(255, 255, 255, 0.8) 50%,
    rgba(255, 255, 255, 0.6) 60%,
    rgba(255, 255, 255, 0.4) 70%,
    rgba(255, 255, 255, 0.2) 80%,
    rgba(255, 255, 255, 0) 90%
  );
  background-size: 200% 100%;
  animation: shimmer-animation 2s infinite ease-in-out;
  z-index: 10; 
  border-radius: inherit;
  pointer-events: none;
  mix-blend-mode: overlay; /* Makes the effect interact better with image colors */
  box-shadow: inset 0 0 20px rgba(255, 255, 255, 0.4);
}

/* Enhanced sparkle effect using multiple pseudo-elements */
.ProseMirror img.image-processing-shimmer::before,
.ProseMirror .ProseMirror-selectednode.image-processing-shimmer::before {
  content: '';
  position: absolute;
  top: -10%;
  left: -10%;
  width: 120%;
  height: 120%;
  background-image: 
    radial-gradient(circle, white 1px, transparent 2px),
    radial-gradient(circle, white 1px, transparent 2px),
    radial-gradient(circle, white 1px, transparent 2px),
    radial-gradient(circle, white 1px, transparent 2px),
    radial-gradient(circle, white 2px, transparent 3px),
    radial-gradient(circle, white 2px, transparent 3px);
  background-size: 
    100px 100px,
    120px 120px,
    80px 80px,
    90px 90px,
    140px 140px,
    60px 60px;
  background-position: 
    0% 0%,
    20% 20%,
    40% 40%,
    60% 60%,
    80% 80%,
    100% 100%;
  opacity: 0;
  pointer-events: none;
  z-index: 11;
  mix-blend-mode: screen;
  animation: sparkle-animation 3s infinite ease-in-out;
}

/* Outer glow pulse effect */
.ProseMirror img.image-processing-shimmer,
.ProseMirror .ProseMirror-selectednode.image-processing-shimmer img {
  box-shadow: 0 0 8px rgba(100, 149, 237, 0.6);
  animation: pulse-glow 2s infinite alternate;
}

/* Dark theme adjustments for the shimmer */
.Editor.dark .ProseMirror img.image-processing-shimmer::after,
.Editor.dark .ProseMirror .ProseMirror-selectednode.image-processing-shimmer::after {
  background: linear-gradient(
    110deg,
    rgba(150, 150, 255, 0) 10%,
    rgba(150, 150, 255, 0.1) 20%,
    rgba(150, 150, 255, 0.2) 30%,
    rgba(150, 150, 255, 0.3) 40%,
    rgba(150, 150, 255, 0.4) 50%,
    rgba(150, 150, 255, 0.3) 60%,
    rgba(150, 150, 255, 0.2) 70%,
    rgba(150, 150, 255, 0.1) 80%,
    rgba(150, 150, 255, 0) 90%
  ); 
  background-size: 200% 100%;
  box-shadow: inset 0 0 20px rgba(150, 150, 255, 0.2);
}

/* Dark theme sparkle adjustment */
.Editor.dark .ProseMirror img.image-processing-shimmer::before,
.Editor.dark .ProseMirror .ProseMirror-selectednode.image-processing-shimmer::before {
  background-image: 
    radial-gradient(circle, rgba(150, 150, 255, 0.8) 1px, transparent 2px),
    radial-gradient(circle, rgba(150, 150, 255, 0.8) 1px, transparent 2px),
    radial-gradient(circle, rgba(150, 150, 255, 0.8) 1px, transparent 2px),
    radial-gradient(circle, rgba(150, 150, 255, 0.8) 1px, transparent 2px),
    radial-gradient(circle, rgba(150, 150, 255, 0.8) 2px, transparent 3px),
    radial-gradient(circle, rgba(150, 150, 255, 0.8) 2px, transparent 3px);
}

/* Dark theme glow adjustment */
.Editor.dark .ProseMirror img.image-processing-shimmer,
.Editor.dark .ProseMirror .ProseMirror-selectednode.image-processing-shimmer img {
  box-shadow: 0 0 8px rgba(100, 149, 237, 0.4);
}

@keyframes shimmer-animation {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

@keyframes sparkle-animation {
  0% { 
    opacity: 0;
    transform: scale(0.95) rotate(0deg); 
  }
  30% { 
    opacity: 0.2;
  }
  50% { 
    opacity: 0.3; 
    transform: scale(1.05) rotate(180deg);
  }
  70% { 
    opacity: 0.2;
  }
  100% { 
    opacity: 0;
    transform: scale(0.95) rotate(360deg); 
  }
}

@keyframes pulse-glow {
  0% { 
    box-shadow: 0 0 8px rgba(100, 149, 237, 0.6); 
  }
  100% { 
    box-shadow: 0 0 16px rgba(100, 149, 237, 0.9);
  }
}

/* Image Query UI Styling */
.ImageQueryUI {
  position: absolute;
  background-color: #fff;
  color: #333;
  border-radius: 8px;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
  padding: 12px;
  width: 320px;
  z-index: 200;
  font-size: 14px;
  transition: all 0.2s ease;
  border: 1px solid #eee;
}

.ImageQueryUI.dark {
  background-color: #212529;
  color: #e9ecef;
  border-color: #444;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
}

.ImageQueryUI .QueryHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
  font-weight: 500;
  font-size: 14px;
}

.ImageQueryUI .CloseButton {
  background: transparent;
  border: none;
  cursor: pointer;
  color: inherit;
  opacity: 0.6;
  transition: opacity 0.2s;
  padding: 4px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.ImageQueryUI .CloseButton:hover {
  opacity: 1;
  background-color: rgba(0, 0, 0, 0.05);
}

.ImageQueryUI .QueryInputContainer {
  display: flex;
  position: relative;
  align-items: center;
  border: 1px solid #ddd;
  border-radius: 6px;
  overflow: hidden;
  background-color: #f9f9f9;
  transition: border-color 0.2s;
}

.ImageQueryUI.dark .QueryInputContainer {
  border-color: #555;
  background-color: #333;
}

.ImageQueryUI .QueryInputContainer:focus-within {
  border-color: #4d7cff;
  box-shadow: 0 0 0 2px rgba(77, 124, 255, 0.2);
}

.ImageQueryUI.dark .QueryInputContainer:focus-within {
  border-color: #6b93ff;
  box-shadow: 0 0 0 2px rgba(107, 147, 255, 0.2);
}

.ImageQueryUI .QueryInput {
  flex: 1;
  padding: 10px 12px;
  font-size: 14px;
  line-height: 1.5;
  color: inherit;
  background: transparent;
  border: none;
  outline: none;
  width: 100%;
}

.ImageQueryUI .QueryInput::placeholder {
  color: #aaa;
}

.ImageQueryUI.dark .QueryInput::placeholder {
  color: #777;
}

.ImageQueryUI .SubmitButton {
  background-color: #4d7cff;
  color: white;
  border: none;
  padding: 10px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s;
}

.ImageQueryUI .SubmitButton:hover {
  background-color: #3a6ae0;
}

.ImageQueryUI .SubmitButton:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.ImageQueryUI.dark .SubmitButton:disabled {
  background-color: #555;
}

.ImageQueryUI.processing .SubmitButton {
  cursor: wait;
}

.ProcessingIndicator {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid #fff;
  border-bottom-color: transparent;
  border-radius: 50%;
  animation: rotate 1s linear infinite;
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* AI Chat UI styles */
.AiChatUI {
  position: absolute;
  z-index: 1100;
  background-color: white;
  border-radius: 6px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  width: 300px;
  overflow: hidden;
  border: 1px solid #ddd;
}

.AiChatUI.dark {
  background-color: #2d2d2d;
  border: 1px solid #444;
  color: #fff;
}

.ChatHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 12px;
  background-color: #f7f7f7;
  border-bottom: 1px solid #e0e0e0;
}

.AiChatUI.dark .ChatHeader {
  background-color: #3a3a3a;
  border-bottom: 1px solid #555;
}

.CloseButton {
  background: none;
  border: none;
  cursor: pointer;
  color: #666;
  padding: 2px;
  border-radius: 4px;
}

.AiChatUI.dark .CloseButton {
  color: #aaa;
}

.ChatInputContainer {
  display: flex;
  padding: 10px;
}

.ChatInput {
  flex: 1;
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
  outline: none;
}

.AiChatUI.dark .ChatInput {
  background-color: #444;
  border: 1px solid #555;
  color: #fff;
}

.SubmitButton {
  margin-left: 8px;
  background-color: #4d90fe;
  color: white;
  border: none;
  border-radius: 4px;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.SubmitButton:disabled {
  background-color: #b3cdf7;
  cursor: not-allowed;
}

.AiChatUI.dark .SubmitButton:disabled {
  background-color: #4c5a6e;
}

.ProcessingIndicator {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Notion Style AI Helper Styles */
.NotionStyleAiHelper {
  position: absolute;
  z-index: 1100;
  overflow: visible;
  margin: 0 auto;
  max-height: calc(100vh - 100px);
  display: flex;
  flex-direction: column;
}

.AiHelperContainer {
  position: relative;
  max-width: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
}

.AiChatWrapper {
  display: flex;
  flex-direction: column;
  gap: 12px;
  max-width: 100%;
  width: 100%;
  max-height: calc(100vh - 120px);
}

/* Prompt Bubble */
.AiPromptBubble {
  width: 100%;
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  border: 1px solid rgba(0, 0, 0, 0.05);
}

.NotionStyleAiHelper.dark .AiPromptBubble {
  background-color: #2d2d2d;
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);
}

.AiPromptHeader {
  display: flex;
  align-items: center;
  padding: 12px;
}

.AiPromptForm {
  display: flex;
  flex: 1;
  margin: 0 8px;
}

.AiLogo {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  overflow: hidden;
  background-color: #f0f2f5;
  flex-shrink: 0;
}

.NotionStyleAiHelper.dark .AiLogo {
  background-color: #444;
}

.AiLogo img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.AiHelperInput {
  flex: 1;
  border: none;
  background: transparent;
  font-size: 14px;
  outline: none;
  padding: 8px 12px;
  color: #333;
  min-width: 0;
}

.NotionStyleAiHelper.dark .AiHelperInput {
  color: #eee;
}

.AiHelperInput::placeholder {
  color: #999;
}

.NotionStyleAiHelper.dark .AiHelperInput::placeholder {
  color: #777;
}

.AiHelperSubmitButton {
  background-color: #4d90fe;
  color: white;
  border: none;
  padding: 8px;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.AiHelperSubmitButton:hover {
  background-color: #3a7cf8;
  transform: scale(1.05);
}

.AiHelperSubmitButton:disabled {
  background-color: #ccc;
  cursor: not-allowed;
  transform: none;
}

.NotionStyleAiHelper.dark .AiHelperSubmitButton {
  background-color: #5d9cff;
}

.NotionStyleAiHelper.dark .AiHelperSubmitButton:disabled {
  background-color: #555;
}

.AiHelperCloseButton {
  background: transparent;
  border: none;
  color: #999;
  padding: 6px;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  transition: all 0.2s ease;
  margin-left: 4px;
  flex-shrink: 0;
}

.AiHelperCloseButton:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: #666;
}

.NotionStyleAiHelper.dark .AiHelperCloseButton {
  color: #777;
}

.NotionStyleAiHelper.dark .AiHelperCloseButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: #aaa;
}

/* Response Bubble */
.AiResponseBubble {
  width: 100%;
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  border: 1px solid rgba(0, 0, 0, 0.05);
  animation: slideInUp 0.3s ease-out;
  max-height: 350px;
  display: flex;
  flex-direction: column;
}

.NotionStyleAiHelper.dark .AiResponseBubble {
  background-color: #2d2d2d;
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);
}

.AiResponseHeader {
  display: flex;
  align-items: center;
  padding: 12px 16px;
  border-bottom: 1px solid #f1f1f1;
}

.NotionStyleAiHelper.dark .AiResponseHeader {
  border-bottom: 1px solid #3a3a3a;
}

.ResponseTitle {
  font-weight: 500;
  font-size: 14px;
  color: #333;
  margin-left: 8px;
}

.NotionStyleAiHelper.dark .ResponseTitle {
  color: #eee;
}

.ResponseContent {
  padding: 16px;
  max-height: 250px;
  overflow-y: auto;
  line-height: 1.6;
  color: #333;
  font-size: 14px;
  flex: 1;
  scrollbar-width: thin;
  scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
}

.ResponseContent::-webkit-scrollbar {
  width: 8px;
}

.ResponseContent::-webkit-scrollbar-track {
  background: transparent;
}

.ResponseContent::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
  border: 2px solid transparent;
}

.NotionStyleAiHelper.dark .ResponseContent::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.2);
}

.NotionStyleAiHelper.dark .ResponseContent {
  color: #eee;
}

/* Markdown Content Styles */
.MarkdownContent {
  opacity: 0;
  animation: fadeIn 0.5s ease-out forwards;
}

.MarkdownContent p {
  margin: 0 0 12px 0;
  white-space: pre-wrap;
}

.MarkdownContent p:last-child {
  margin-bottom: 0;
}

.MarkdownContent h1, 
.MarkdownContent h2, 
.MarkdownContent h3 {
  margin-top: 18px;
  margin-bottom: 12px;
  font-weight: 600;
  line-height: 1.3;
}

.MarkdownContent h1 {
  font-size: 1.5em;
}

.MarkdownContent h2 {
  font-size: 1.3em;
}

.MarkdownContent h3 {
  font-size: 1.1em;
}

.MarkdownContent ol, 
.MarkdownContent ul {
  margin: 12px 0;
  padding-left: 24px;
}

.MarkdownContent li {
  margin-bottom: 4px;
}

.MarkdownContent strong, 
.MarkdownContent b {
  font-weight: 600;
}

.MarkdownContent em, 
.MarkdownContent i {
  font-style: italic;
}

/* Lazy Loading Animation */
.LazyLoadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 20px 0;
  height: 100px;
}

.LazyLoadingDots {
  display: flex;
  gap: 4px;
  margin-bottom: 12px;
}

.LazyLoadingDots span {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #4d90fe;
  opacity: 0.6;
  display: inline-block;
}

.NotionStyleAiHelper.dark .LazyLoadingDots span {
  background-color: #5d9cff;
}

.LazyLoadingDots span:nth-child(1) {
  animation: pulse 1.4s ease-in-out infinite;
}

.LazyLoadingDots span:nth-child(2) {
  animation: pulse 1.4s ease-in-out 0.2s infinite;
}

.LazyLoadingDots span:nth-child(3) {
  animation: pulse 1.4s ease-in-out 0.4s infinite;
}

.LazyLoadingText {
  font-size: 14px;
  color: #777;
  font-style: italic;
}

.NotionStyleAiHelper.dark .LazyLoadingText {
  color: #aaa;
}

/* Response Actions */
.ResponseActions {
  display: flex;
  gap: 8px;
  padding: 12px 16px;
  border-top: 1px solid #f1f1f1;
  background-color: #f9f9f9;
  justify-content: flex-end;
  position: sticky;
  bottom: 0;
  z-index: 5;
}

.NotionStyleAiHelper.dark .ResponseActions {
  border-top: 1px solid #3a3a3a;
  background-color: #333;
}

.ResponseActionButton {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 12px;
  border-radius: 6px;
  border: none;
  font-size: 13px;
  cursor: pointer;
  transition: all 0.2s;
}

.EditButton {
  background-color: transparent;
  color: #555;
  border: 1px solid #ddd;
}

.EditButton:hover {
  background-color: rgba(0, 0, 0, 0.05);
  border-color: #ccc;
  transform: translateY(-1px);
}

.NotionStyleAiHelper.dark .EditButton {
  color: #ccc;
  border-color: #444;
}

.NotionStyleAiHelper.dark .EditButton:hover {
  background-color: rgba(255, 255, 255, 0.05);
  border-color: #555;
}

.InsertButton {
  background-color: #4d90fe;
  color: white;
  border: 1px solid #4d90fe;
}

.InsertButton:hover {
  background-color: #3a7cf8;
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.NotionStyleAiHelper.dark .InsertButton {
  background-color: #5d9cff;
  border-color: #5d9cff;
}

.NotionStyleAiHelper.dark .InsertButton:hover {
  background-color: #4a8eff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Processing Indicator */
.ProcessingIndicator {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s linear infinite;
}

/* Animations */
@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes pulse {
  0%, 100% { 
    transform: scale(0.8);
    opacity: 0.3; 
  }
  50% { 
    transform: scale(1.2);
    opacity: 1; 
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Fix for mobile devices */
@media (max-width: 768px) {
  .NotionStyleAiHelper {
    width: calc(100% - 20px) !important;
    left: 10px !important;
    transform: none !important;
    max-height: 80vh;
  }
  
  .AiChatWrapper {
    max-height: 70vh;
  }
  
  .AiResponseBubble {
    max-height: 60vh;
  }
  
  .ResponseContent {
    max-height: 45vh;
  }
}

/* Text Improvement UI Component Styles */
.TextImproveUI {
  position: absolute;
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  width: 340px;
  z-index: 1100;
  overflow: visible;
  display: flex;
  flex-direction: column;
  border: none;
  opacity: 0;
  transform: translateY(6px) scale(0.98);
  animation: textImproveUiAppear 0.2s ease forwards;
  backdrop-filter: blur(10px);
}

@keyframes textImproveUiAppear {
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.TextImproveUI.dark {
  background-color: #1e1e1e;
  border: 1px solid rgba(255, 255, 255, 0.08);
  color: #f0f0f0;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
}

.ImproveHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 20px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
  font-weight: 500;
  font-size: 15px;
  color: #111;
}

.TextImproveUI.dark .ImproveHeader {
  border-bottom-color: rgba(255, 255, 255, 0.08);
  color: #fff;
}

.ImproveHeader .CloseButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background-color: transparent;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  color: #666;
  transition: all 0.15s ease;
}

.ImproveHeader .CloseButton:hover {
  background-color: rgba(0, 0, 0, 0.06);
  color: #111;
}

.TextImproveUI.dark .ImproveHeader .CloseButton {
  color: #999;
}

.TextImproveUI.dark .ImproveHeader .CloseButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: #fff;
}

.ImproveOptions {
  display: flex;
  padding: 16px 20px;
  gap: 12px;
}

.ImproveOption {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 12px 14px;
  background-color: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s;
  font-size: 14px;
  font-weight: 500;
  color: #495057;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.02);
}

.TextImproveUI.dark .ImproveOption {
  background-color: #25282c;
  border-color: #343a40;
  color: #ced4da;
}

.ImproveOption:hover {
  background-color: #f1f3f5;
  transform: translateY(-1px);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.05);
}

.TextImproveUI.dark .ImproveOption:hover {
  background-color: #2c3035;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2);
}

.ImproveOption.active {
  background-color: #e7f5ff;
  border-color: #74c0fc;
  color: #1971c2;
  box-shadow: 0 2px 4px rgba(23, 113, 194, 0.1);
}

.TextImproveUI.dark .ImproveOption.active {
  background-color: #0b4a7a;
  border-color: #1864ab;
  color: #a5d8ff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
}

.ImproveOption .option-icon {
  flex-shrink: 0;
  transition: transform 0.2s ease;
}

.ImproveOption:hover .option-icon {
  transform: scale(1.1);
}

.ImprovePromptContainer {
  padding: 0 20px 16px;
}

.ImprovePromptInput {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid #dee2e6;
  border-radius: 8px;
  font-size: 14px;
  outline: none;
  background-color: #f8f9fa;
  color: #495057;
  transition: all 0.2s ease;
}

.TextImproveUI.dark .ImprovePromptInput {
  background-color: #25282c;
  border-color: #343a40;
  color: #e9ecef;
}

.ImprovePromptInput:focus {
  border-color: #74c0fc;
  box-shadow: 0 0 0 3px rgba(116, 192, 252, 0.15);
  background-color: #fff;
}

.TextImproveUI.dark .ImprovePromptInput:focus {
  border-color: #339af0;
  box-shadow: 0 0 0 3px rgba(51, 154, 240, 0.15);
  background-color: #212529;
}

.ImprovePromptInput::placeholder {
  color: #adb5bd;
}

.TextImproveUI.dark .ImprovePromptInput::placeholder {
  color: #6c757d;
}

.ImproveButtonContainer {
  display: flex;
  justify-content: center;
  padding: 16px 20px 20px;
}

.TextImproveUI .SubmitButton {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background-color: #339af0;
  color: white;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 4px 12px rgba(51, 154, 240, 0.25);
}

.TextImproveUI .SubmitButton:hover {
  background-color: #228be6;
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(51, 154, 240, 0.35);
}

.TextImproveUI.dark .SubmitButton {
  background-color: #1c7ed6;
  box-shadow: 0 4px 12px rgba(28, 126, 214, 0.3);
}

.TextImproveUI.dark .SubmitButton:hover {
  background-color: #1971c2;
  box-shadow: 0 6px 16px rgba(28, 126, 214, 0.4);
}

.TextImproveUI .SubmitButton:disabled {
  background-color: #adb5bd;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.TextImproveUI.dark .SubmitButton:disabled {
  background-color: #495057;
}

.TextImproveUI.processing {
  pointer-events: none;
}

.TextImproveUI .ProcessingIndicator {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 0.8s linear infinite;
}